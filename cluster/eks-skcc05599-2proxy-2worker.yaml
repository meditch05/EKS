---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: eks-skcc05599
  region: ap-northeast-2
  version: "1.15"
vpc:
  cidr: 10.5.0.0/16                    # 10.16.0.0   ~ 10.16.255.255, 65536 (optional, must match CIDR used by the given VPC)
  clusterEndpoints:
    privateAccess: true
    publicAccess: true
nodeGroups:
  - name: proxy-unmgt
    tags:
      nodegroup-name: proxy-unmgt
      creator: skcc05599
    labels:
      role: proxy
      nodegroup-type: unmanaged
      ec2-type: t3.micro
    instanceType: t3.micro
    # https://eksctl.io/usage/autoscaling/
    availabilityZones: ["ap-northeast-2a", "ap-northeast-2b", "ap-northeast-2c"]
    minSize: 2
    maxSize: 3
    desiredCapacity: 2
    volumeSize: 20
    volumeType: gp2
    ami: ami-08a18de5609e8f781
    privateNetworking: true     # if only 'Private' subnets are given, this must be enabled
    ssh:
      allow: true # will use ~/.ssh/id_rsa.pub as the default ssh key
    iam:
      # https://docs.aws.amazon.com/AmazonECR/latest/userguide/ECR_on_EKS.html
      #attachPolicyARNs:
      #  - arn:aws:iam::644960261046:role/EKS-IAM-ROLE
      withAddonPolicies:
        ########################################################################
        # An example of ClusterConfig object with access to CSI drivers:
        ########################################################################
        efs: true    # CSI Driver
        ebs: true    # CSI Driver
        #fsx: true    # CSI Driver
        ########################################################################
        # An example of ClusterConfig object compatible with the "app-dev" quickstart
        # profile. See also: https://github.com/weaveworks/eks-quickstart-app-dev
        ########################################################################
        autoScaler: true
        cloudWatch: true
        #albIngress: true
        ########################################################################
        # https://eksctl.io/usage/iam-policies/
        ########################################################################
        imageBuilder: true
    #preBootstrapCommands:
    #  # allow docker registries to be deployed as cluster service ( Need. ECR )
    #  - 'echo {\"insecure-registries\": [\"172.20.0.0/16\",\"10.100.0.0/16\"]} > /etc/docker/daemon.json'
    #  - "systemctl restart docker"
    #  - 'echo {\"insecure-registries\": [\"644960261046.dkr.ecr.ap-northeast-2.amazonaws.com\"]} > /etc/docker/daemon.json'
  - name: worker-unmgt
    tags:
      nodegroup-name: worker-unmgt
      creator: skcc05599
    labels:
      role: worker
      nodegroup-type: unmanaged
      ec2-type: t3.micro
    instanceType: t3.micro
    # https://eksctl.io/usage/autoscaling/
    availabilityZones: ["ap-northeast-2a", "ap-northeast-2b", "ap-northeast-2c"]
    minSize: 3
    maxSize: 4
    desiredCapacity: 3
    volumeSize: 20
    volumeType: gp2
    ami: ami-08a18de5609e8f781
    privateNetworking: true     # if only 'Private' subnets are given, this must be enabled
    ssh:
      allow: true # will use ~/.ssh/id_rsa.pub as the default ssh key
    iam:
      withAddonPolicies:
        efs: true    # CSI Driver
        ebs: true    # CSI Driver
        #fsx: true    # CSI Driver
        autoScaler: true
        cloudWatch: true
        #albIngress: true
        imageBuilder: true
managedNodeGroups:
  - name: workers-mgt
    tags:
      nodegroup-name: worker-mgt
      creator: skcc05599
    labels:
      role: worker
      nodegroup-type: managed
      ec2-type: t3.micro
    instanceType: t3.micro
    minSize: 2
    maxSize: 3
    desiredCapacity: 2
    volumeSize: 30
    privateNetworking: true
    ssh:
      allow: true
